# EXERCISE 2.1

import random

a=10**9
b=10**10

integer = random.randint(a, b)
print(integer)

integer_string=str(integer)

no_of_0s = integer_string.count('0')
print('Number of 0s is:', no_of_0s)



  
# EXERCISE 2.2

# Explain the results.
x = 5


x == 5 and 3 + 8   # 11
#---> first one is true, and second part is not faslse so the result
#of second part is returned

x == 4 and 3 + 8   # False
#---> first part is false (4 is not equal 5),
#so second part is not being calculated, false is returned

3 + 8 and x == 5   # True
#---> both parts are true, so the result of second part is returned

3 + 8 and x == 4   # False
#---> first art is true, second part is false, so false is returned



# isinstance function checks if an object is a part of specified class

isinstance(True, int)    # True
#---> the result is true, because the object 'True' is an instance
#of class 'int' (integers),
#as python treats 'True' and'False' as integers

isinstance(True, bool)   # True
#---> the result is true, because the object 'True' is an instance
#of class 'bool' (boolean)



# EXERCISE 2.3

list=[]

for x in range(1,2021,2):
  x = x**2
  list.append(x)

print(list)
print('The sum is', sum(list))



# EXERCISE 2.4

(a)
name = 'Anna'

points = []

for letter in name:
  no=ord(letter)
  points.append(no)

print('Unicode code points are;", points)

(b)

pt=[ (1, "Hydrogen", "H", 1),
    (2, "Helium", "He", 4),
    (3, "Lithium", "Li", 7),
    (4, "Beryllium", "Be", 9),
    (5, "Boron", "B", 11),
    (6, "Carbon", "C", 12),
    (7, "Nitrogen", "N", 14),
    (8, "Oxygen", "O", 16),
    (9, "Fluorine", "F", 19),
    (10, "Neon", "Ne", 20)]

print('+---+--------------------+------+----------+')
print('|No.|Name (en)           |Symbol|Weight (u)|')

for (n, name, symbol, weight) in pt:
  print('+---+--------------------+------+----------+')
  line = f"|{n:3d}|{name:20s}|{symbol:6s}|{weight:10d}|"
  print(line)

print('+---+--------------------+------+----------+')



# EXERCISE 2.5

loremipsum='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'
# Black character count

black_characters_count=0

for character in loremipsum:
  if not character.isspace():
    black_characters_count += 1

print('No of black characters is:', black_characters_count)


# No of words

words = loremipsum.split()
words_count = len(words)
print('No of words is:', words_count)

# longest word

longest=max(words, key=len)

print('Longest word is', longest)

# lenght sorting

sorted_lenght=sorted(words, key=len)
print('Words sorted by lenght:', sorted_lenght)

# lexicographic sorting

print('Lexicographic sorting:', sorted(loremipsum.split(), key=str.casefold))


# EXERCISE 2.6

  # Find and explain the results.

t = (2, 4)
# ---> t is a tuple consisting of two elements, '2' and '4'

print(t[2])
# ---> Prints 3rd element of the tuple (python counts the elements from '0').
#The tuple consists only 2 elements, so for the line to work,
# the number in square brackets should not be larger than 1

t.append(6)
# ---> the command .append adds an element to the end of the list.
# This command doesn't work on tuples.

a, b = t ; print(a, b)
# ---> This makes a and b equal to the first and second element of the
# tuple respectively



# exercise 2.7

# method 1

dictionary = {
    'I': 1,
    'IV': 4,
    'V': 5,
    'IX': 9,
    'X': 10,
    'XL': 40,
    'L': 50,
    'XC': 90,
    'C': 100,
    'CD': 400,
    'D': 500,
    'CM': 900,
    'M': 1000}

# method 2

roman=['I', 'IV', 'V', 'IX', 'X', 'XL', 'L', 'XC', 'C', 'CD', 'D', 'CM', 'M']
arabic=[1,4,5,9,10,40,50,90,100,400,500,900,1000]

roman_arabic = zip(roman,arabic)

dictionary2 = dict(roman_arabic)
print(dictionary2)



  
